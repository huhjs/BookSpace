<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="goodsMapper">

	<resultMap type="com.study.bookspace.goods.vo.GoodsCategoryVO" id="goodsCategory">
		<id		 column="GOODS_CATE_CODE"  				property="goodsCateCode"  />
		<result column="GOODS_CATE_NAME" 				property="goodsCateName"  />
		<result column="GOODS_CATE_ORDER_NO"  		property="goodsCateOrderNo"  />
		<result column="GOODS_CATE_IS_USE"  			property="goodsCateIsUse"  />
	</resultMap>
	
	<resultMap type="com.study.bookspace.goods.vo.GoodsVO" id="goods">
		<id		 column="GOODS_CODE"					property="goodsCode"/>
		<result column="GOODS_CATE_CODE"			property="goodsCateCode"/>
		<result column="GOODS_NUM"			property="goodsNum"/>
		<result column="GOODS_NAME"					property="goodsName"/>
		<result column="GOODS_PRICE"					property="goodsPrice"/>
		<result column="GOODS_STOCK_CNT"			property="goodsStockCnt"/>
		<result column="GOODS_INTRO"					property="goodsIntro"/>
		<result column="GOODS_STATUS"				property="goodsStatus"/>
		<result column="GOODS_STATUS_STR"		property="goodsStatusStr"/>
		<result column="ROW_NUM"  					 property="rowNum"/>
		<result column="ROW_NUMBER"  			 property="rowNumber"/>
		<association property="goodsCategoryVO" 	resultMap="goodsCategory"></association>
		<collection property="goodsImgList"   			resultMap="goodsImg" ></collection>
	</resultMap>
	
	<resultMap type="com.study.bookspace.goods.vo.GoodsImgVO" id="goodsImg">
		<id  column="GOODS_IMG_CODE"  				property="goodsImgCode"/>
		<result  column="ORIGIN_FILE_NAME"  		property="originFileName"/>
		<result  column="ATTACHED_FILE_NAME"  	property="attachedFileName"/>
		<result  column="IS_MAIN"  							property="isMain"/>
		<result  column="GOODS_CODE"  				property="goodsCode"/>
	</resultMap>
	
	<!-- 굿즈 카테고리 관리페이지에서 목록 조회(관리자) -->
	<select id="selectGoodsCateList" resultMap="goodsCategory">
		SELECT GOODS_CATE_CODE
			, GOODS_CATE_NAME
			, GOODS_CATE_ORDER_NO
			, GOODS_CATE_IS_USE
		FROM GOODS_CATEGORY
		ORDER BY GOODS_CATE_ORDER_NO DESC
	</select>
	
	<!--굿즈 카테고리 등록 -->
	<insert id="insertGoodsCategory">
	INSERT INTO GOODS_CATEGORY (
		    GOODS_CATE_CODE
		    , GOODS_CATE_NAME
		    , GOODS_CATE_ORDER_NO
		) VALUES (
		    (SELECT 'GOODS_CATE_' || LPAD(NVL(MAX(TO_NUMBER(SUBSTR(GOODS_CATE_CODE, 12) ) ), '0')+ 1, 3, '0') 
            FROM GOODS_CATEGORY)
		    , #{goodsCateName}
		    , (SELECT NVL(MAX(TO_NUMBER(GOODS_CATE_ORDER_NO), 0) + 1 FROM GOODS_CATEGORY)
		)

	</insert>
	
	<!-- 카테고리명 중복 체크 -->
	<select id="checkGoodsCateName" resultType="int">
		SELECT COUNT(GOODS_CATE_CODE)
		FROM GOODS_CATEGORY
		WHERE GOODS_CATE_NAME = #{goodsCateName}
	</select>
	
	<!-- 카테고리 삭제  -->
	<delete id="deleteGoodsCategory">
		DELETE GOODS_CATEGORY
		WHERE GOODS_CATE_CODE = #{goodsCateCode}
	</delete>
	
	<!-- 카테고리 사용여부 변경 -->
	<update id="updateIsUse">
		UPDATE GOODS_CATEGORY
		SET
			GOODS_CATE_IS_USE = DECODE(GOODS_CATE_IS_USE, 'Y', 'N', 'N', 'Y')
		WHERE GOODS_CATE_CODE = #{goodsCateCode}
	</update>
	
	
	
	
	

	
		<!-- 굿즈 목록 조회(굿즈 관리 페이지의 첫 화면) -->
	<select id="selectGoodsListAdmin" resultMap="goods">
		SELECT GOODS_CODE
			, GOODS_NAME
			, DECODE(GOODS_STATUS, 1, '판매중', 2, '준비중', '매진') GOODS_STATUS_STR
			, GOODS_STOCK_CNT
			, GOODS_CATE_NAME
		FROM GOODS G, GOODS_CATEGORY C
		WHERE G.GOODS_CATE_CODE = C.GOODS_CATE_CODE 
		<if test='goodsSearchVO != null and !goodsSearchVO.searchGoodsName.equals("")'>             
		AND UPPER(GOODS_NAME) LIKE '%'||UPPER(#{goodsSearchVO.searchGoodsName})||'%'
		</if>
		<if test="goodsSearchVO != null">
			AND G.GOODS_CATE_CODE IN
			<foreach collection="goodsSearchVO.searchCateCode" item="cateCode" open="(" close=")" separator=",">
				#{cateCode}			
			</foreach>
		</if>
		<if test="goodsSearchVO != null and goodsSearchVO.searchGoodsStatus != 0">
		AND GOODS_STATUS = #{goodsSearchVO.searchGoodsStatus}
		</if>
		<if test='goodsSearchVO != null and !goodsSearchVO.searchFromGoodsStock.equals("")'>
		AND GOODS_STOCK_CNT &gt;= TO_NUMBER(#{goodsSearchVO.searchFromGoodsStock})
		</if>
		<if test='goodsSearchVO != null and !goodsSearchVO.searchToGoodsStock.equals("")'> 
		AND GOODS_STOCK_CNT &lt;= TO_NUMBER(#{goodsSearchVO.searchToGoodsStock})
		</if> 
		
	</select>
	
	<!-- 굿즈 생성  -->
	<insert id="insertGoods">
		INSERT INTO GOODS (
			GOODS_CODE
			, GOODS_CATE_CODE
			, GOODS_NAME
			, GOODS_PRICE
			, GOODS_STOCK_CNT
			, GOODS_INTRO
			, GOODS_STATUS
		) VALUES (
			#{goodsCode}
			, #{goodsCateCode}
			, #{goodsName}
			, #{goodsPrice}
			, #{goodsStockCnt}
			, #{goodsIntro}
			, #{goodsStatus}
		
		)
	</insert>
	
		<!-- 다음 굿즈 코드 조회  -->
	<select id="nextGoodsCode" resultType="String">
		SELECT 'GOODS_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(GOODS_CODE, 7))), 0) + 1, 3, '0') 
		FROM GOODS
	</select>
	
	<!-- 상품 등록 시 등록될 이미지  -->
	<insert id="insertImgs">
		INSERT INTO GOODS_IMAGE(
			GOODS_IMG_CODE
			, ORIGIN_FILE_NAME
			, ATTACHED_FILE_NAME
			, IS_MAIN
			, GOODS_CODE
		)
		<foreach collection="goodsImgList" item="img" index="i" separator="UNION ALL">
			SELECT (SELECT 'GOODS_IMG_'||LPAD(NVL(MAX(TO_NUMBER(SUBSTR(GOODS_IMG_CODE, 11))), 0) + 1 + #{i}, 3, '0') 
					FROM GOODS_IMAGE)
					, #{img.originFileName}
					, #{img.attachedFileName}
					, #{img.isMain}
					, #{img.goodsCode}
			FROM DUAL
		</foreach>
	</insert>
	
		<!-- 사용 중인 카테고리 목록 -->
	<select id="cateListInUse" resultMap="goodsCategory">
		SELECT GOODS_CATE_CODE
			, GOODS_CATE_NAME
		FROM GOODS_CATEGORY
		WHERE GOODS_CATE_IS_USE = 'Y'
		ORDER BY GOODS_CATE_ORDER_NO
	</select>
	
	<!-- 굿즈 상세 조회(관리자)  -->
	<select id="selectGoodsDetailAdmin" resultMap="goods">
		SELECT G.GOODS_CODE
			, GOODS_CATE_CODE
			, GOODS_NAME
			, GOODS_PRICE
			, GOODS_INTRO
			, GOODS_STATUS
			, GOODS_STOCK_CNT
			, GOODS_IMG_CODE
			, ORIGIN_FILE_NAME
			, ATTACHED_FILE_NAME
			, IS_MAIN
		FROM GOODS G, GOODS_IMAGE I
		WHERE G.GOODS_CODE = I.GOODS_CODE
		AND G.GOODS_CODE =#{goodsCode}
	</select>
	
		<!-- 굿즈 정보 수정 -->
	<update id="updateGoods">
		UPDATE GOODS
		SET
			GOODS_CATE_CODE = #{goodsCateCode}
			, GOODS_NAME = #{goodsName}
			, GOODS_PRICE = #{goodsPrice}
			, GOODS_INTRO = #{goodsIntro}
			, GOODS_STATUS = #{goodsStatus}
			, GOODS_STOCK_CNT = #{goodsStockCnt}
		WHERE GOODS_CODE = #{goodsCode}
	</update>
	
	<!-- 굿즈 삭제  -->
	<delete id="deleteGoods">
		DELETE GOODS
		WHERE GOODS_CODE =#{goodsCode}
	</delete>
	
	
	<!--굿즈 리스트 (퍼블릭)  -->
	<select id="goodsListForPublic" resultMap="goods">
		SELECT GOODS_CODE
			, GOODS_NAME
			, GOODS_PRICE
			, GOODS_STATUS
			, GOODS_STOCK_CNT
		FROM GOODS
	</select>
	
	<!-- 굿즈 상세 조회(퍼블릭) -->
	<select id="goodsDetailForPublic" resultMap="goods">
		SELECT GOODS.GOODS_CODE
			, GOODS_NAME
			, GOODS_PRICE
			, GOODS_INTRO
			, ATTACHED_FILE_NAME
			, IS_MAIN
		FROM GOODS GOODS, GOODS_IMAGE IMG
		WHERE GOODS.GOODS_CODE = IMG.GOODS_CODE
		AND GOODS.GOODS_CODE = #{goodsCode}
		</select>
	
	
	
	
</mapper>
